{"messages": [{"role": "system", "content": "You are a coding-style master good at formatting codes into same coding style."}, {"role": "user", "content": "Give me a perfect coding style example."}, {"role": "assistant", "content": "/***********************************************************************\n * File: Main.cpp\n * Author: Alex\n * Create Date: 2023/03/17\n * Editor: Brendon\n * Update Date: 2023/03/17\n * Description: This program is to compute and ouput the volume of a sphere with radius r.\n***********************************************************************/\n#define PI 3.1415926\n\n#include <iostream>\n#include <iomanip>\n\nusing namespace std;\n\nint main()\n{\n\t// reusable variable ,place this variable outside of the loop\n\tstd::string input;\n\t\n\t// infinite loop until cin meets EOF\n\twhile (true)\n\t{\n\t\t// read input as a string\n\t\tstd::cin >> input;\n\t\t\n\t\t// break the loop if input stream meets EOF\n\t\tif(std::cin.eof())\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\t// output the input string ,\n\t\t// but with the indentation if string length is less than 10\n\t\tstd::cout << std::setw(10) << input << \"\n\";\n\t}\n}\n\n// Intent: To calculate the sum of two numbers\n// Pre: Two integer number\n// Post: The function returns the sum of two numbers\nint sum(int a, int b){\n    return a + b;\n}\n/************************************************************************\n * File: main.cpp\n * Author: BO-EN HUANG & YUEH-HSUN WU\n * Create Date: 2023-3-19\n * Editor: BO-EN HUANG & YUEH-HSUN WU\n * Update Date: 2023-3-19\n * Description: Draw and print out the canvas.\n ************************************************************************/\n\n#include <iostream>\n#include <stdio.h>\nusing namespace std;\n\nvoid drawBoard();\t// Function to draw boards\nvoid makeBoard();\t// Function to make board\nvoid modifyBoard(); // Function to modify board\n\nconst int DUNGEN_ROW = 10, DUNGEN_COL = 20;\nchar dungenMap[DUNGEN_ROW][DUNGEN_COL];\n\nchar wall, blank, position; // the symbol of wall, blank, position respectively\nint posX = 0, posY = 0;\t\t// X and Y modifying position respectively\n\nint main(int argc, char **argv)\n{\n\tmakeBoard();\n\tdrawBoard();\n\tmodifyBoard();\n\tdrawBoard();\n}\n\n// Intent: Draw out the whole board\n// Pre: nothing showed\n// Post: show the dungen map on screen\nvoid drawBoard()\n//==================================================================\n{\n\t// Draw out the whole board\n\t/************************************************************************/\n\tfor (int row = 0; row < DUNGEN_ROW; row++)\n\t{\n\t\tfor (int col = 0; col < DUNGEN_COL; col++)\n\t\t{\n\t\t\tcout << dungenMap[row][col];\n\t\t}\n\t\tcout << endl;\n\t}\n\tcout << endl;\n\t/************************************************************************/\n}\n\n// Intent: Enter symbol for wall and blank then create array\n// Pre: symbols of wall and blank are unknown and the dungen map is empty\n// Post: dungen map is filled with symbols of wall and blank\nvoid makeBoard()\n//==================================================================\n{\n\t// Enter symbol for wall and blank then create array\n\t/************************************************************************/\n\tcout << \"Enter symbol for wall: \";\n\tcin >> wall; // get the symbol of wall from user\n\tcout << \"Enter symbol for blank: \";\n\tcin >> blank; // get the symbol of blank from user\n\n\t// create the map\n\tfor (int row = 0; row < DUNGEN_ROW; row++)\n\t{\n\t\tfor (int col = 0; col < DUNGEN_COL; col++)\n\t\t{\n\t\t\tif (row == 0 || row == DUNGEN_ROW - 1 || col == 0 || col == DUNGEN_COL - 1)\n\t\t\t{\n\t\t\t\t// set the board of map to be symbols of wall\n\t\t\t\tdungenMap[row][col] = wall;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// set the inner of map to be filled with symbols of blank\n\t\t\t\tdungenMap[row][col] = blank;\n\t\t\t}\n\t\t}\n\t}\n\n\t/************************************************************************/\n}\n\n// Intent: Modify board given position and char to change\n// Pre: original map is not changed\n// Post: if position of X and Y is valid, substitute symbol of position for given position in map\nvoid modifyBoard()\n//==================================================================\n{\n\t// Function for modifying board given position and char to change\n\t/************************************************************************/\n\tcout << \"Enter symbol for modifying position: \";\n\tcin >> position; // get the symbol of position from user\n\tcout << \"Enter X of modifying position: \";\n\tcin >> posX; // get position of X from user\n\tcout << \"Enter Y of modifying position: \";\n\tcin >> posY; // get position of Y from user\n\n\t/* if the position of X or Y is beyond the board, show message \"Invalid input\",\n\totherwise, set the X,Y position in map to be symbol of position*/\n\tif (posX < 0 || posY > DUNGEN_ROW - 1 || posY < 0 || posX > DUNGEN_COL - 1)\n\t{\n\t\tcout << \"Invalid input\" << endl;\n\t}\n\telse\n\t{\n\t\tdungenMap[posY][posX] = position;\n\t}\n\t/************************************************************************/\n}"}]}
{"messages": [{"role": "system", "content": "You are a coding-style master good at formatting codes into same coding style."}, {"role": "user", "content": "give me a animal"}, {"role": "assistant", "content": "cow"}]}
{"messages": [{"role": "system", "content": "You are a coding-style master good at formatting codes into same coding style."}, {"role": "user", "content": "give me a animal"}, {"role": "assistant", "content": "double input = 0, ouput = 0;if(input == 1 && ouput == 0){}"}]}
{"messages": [{"role": "system", "content": "You are a coding-style master good at formatting codes into same coding style."}, {"role": "user", "content": "give me a animal"}, {"role": "assistant", "content": "21o3hjo21ih3\n213jo21j312\n321ol3lj213\n"}]}
